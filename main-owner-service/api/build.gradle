import java.util.stream.Collectors

/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'application'
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
}

repositories {
    mavenCentral()
}

group = 'demo'
version = '1.0.0-SNAPSHOT'
description = 'Spring Cloud GCP Pub/Sub Code Sample'
java.sourceCompatibility = JavaVersion.VERSION_21


//tasks.withType(JavaCompile).configureEach {
//    options.compilerArgs << '-parameters'
//}

compileJava {
    //inputs.property("moduleName", moduleName)
    doFirst {

   //     options.compilerArgs += [
   //             '--add-modules', 'spring.cloud.gcp.pubsub'
   //     ]

         options.compilerArgs += [
          '--module-path', classpath.asPath
         ]
         classpath = files()

  //      options.compilerArgs += [
  //        '--module-path', '/home/pawel/.gradle/caches/modules-2/files-2.1/com.google.cloud/spring-cloud-gcp-pubsub/5.6.1/cadd0fe84ed4094c6203eb748405cf5cd0cebfcd/spring-cloud-gcp-pubsub-5.6.1.jar'
  //      ]

        System.out.println(options.compilerArgs.stream().collect(Collectors.joining("\n\n")).replace(":", "\n"))
    }
}

dependencies {
    implementation(
            project(':main-owner-service:domain'),
            'com.google.cloud:spring-cloud-gcp-starter-pubsub:5.6.1',
            'org.springframework.boot:spring-boot-starter-web:3.3.3',
            'org.springframework.integration:spring-integration-core:6.3.4',
    )

    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.11.4',
            'org.assertj:assertj-core:3.27.3',
            'org.springframework.boot:spring-boot-test-autoconfigure:3.3.3',
    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
}

test {
    useJUnitPlatform()
}
